service: serverless-instagram-pyconcz

plugins:
  - serverless-python-requirements

custom:
    config: ${file(config.json)}

provider:
  name: aws
  region: us-east-1
  runtime: python3.6
  memorySize: 128
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: arn:aws:s3:::${self:custom.config.UPLOAD_IMAGE_BUCKET_NAME}
    - Effect: Allow
      Action:
        - s3:*
      Resource: arn:aws:s3:::${self:custom.config.UPLOAD_IMAGE_BUCKET_NAME}/*
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

package:
  individually: true

functions:
  authorizer:
    module: authorizer
    handler: authorizer.handler
    environment:
      AUTH0_SECRET: ${self:custom.config.AUTH0_SECRET}
      AUTH0_CLIENT_ID: ${self:custom.config.AUTH0_CLIENT_ID}

  signedUrl:
    module: signed_url
    handler: generate_signed_url.handler
    environment:
      UPLOAD_IMAGE_BUCKET_NAME: ${self:custom.config.UPLOAD_IMAGE_BUCKET_NAME}
    events:
      - http:
          cors: true
          method: get
          path: /get_signed_url
          authorizer: authorizer

resources:
  Resources:
    UploadBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:custom.config.UPLOAD_IMAGE_BUCKET_NAME}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - "*"
              AllowedMethods:
                - "PUT"
              AllowedHeaders:
                - "*"
              MaxAge: 3000
